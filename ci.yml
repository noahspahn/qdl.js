name: CI/CD

on:
  push:
    branches: [ master, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master, develop ]
  workflow_dispatch:

concurrency:
  group: ${{ github.ref == 'refs/heads/master' && github.run_id || github.head_ref || github.ref }}-${{ github.workflow }}-${{ github.event_name }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

permissions:
  contents: read

jobs:
  lint:
    name: Lint and Format
    runs-on: ubuntu-24.04
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Lint
        run: bun run lint

      - name: Check formatting
        run: bun run format --check

  test:
    name: Test
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    strategy:
      matrix:
        node-version: [18, 20, 22]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build
        run: bun run build

      - name: Run tests
        run: bun test --coverage

      - name: Upload coverage
        if: matrix.node-version == 20
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: false

  build:
    name: Build and Package
    runs-on: ubuntu-24.04
    timeout-minutes: 5
    needs: [lint, test]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build
        run: bun run build

      - name: Test build artifacts
        run: |
          test -f dist/qdl.js
          test -f dist/qdl.d.ts
          test -f dist/bin/qdl.js
          test -f dist/bin/simg2img.js

      - name: Pack for testing
        run: npm pack

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            dist/
            *.tgz

  benchmark:
    name: Performance Benchmark
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y android-sdk-libsparse-utils

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build
        run: bun run build

      - name: Link for global usage
        run: bun link

      - name: Download test image
        run: |
          url=$(curl -s https://raw.githubusercontent.com/commaai/openpilot/master/system/hardware/tici/agnos.json | jq -r '.[] | select(.name == "system") | .url')
          curl -L $url | unxz > system.img

      - name: Generate raw system image (reference)
        run: simg2img system.img system-raw.img

      - name: Run sparse benchmark
        run: |
          echo "Running simg2img.js benchmark..."
          time simg2img.js system.img /tmp/system-raw.img

      - name: Verify output matches
        run: cmp system-raw.img /tmp/system-raw.img

  demo:
    name: Build Demo
    runs-on: ubuntu-24.04
    timeout-minutes: 5
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build main package
        run: bun run build

      - name: Link for demo usage
        run: bun link

      - name: Install demo dependencies
        run: cd demo && bun install

      - name: Type check demo
        run: cd demo && bun check

      - name: Build demo
        run: cd demo && bun run build

      - name: Upload demo artifacts
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./demo/dist

  security:
    name: Security Scan
    runs-on: ubuntu-24.04
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run security audit
        run: bun audit

      - name: Check for vulnerabilities
        run: |
          if bun audit --audit-level moderate; then
            echo "No moderate or higher vulnerabilities found"
          else
            echo "Security vulnerabilities detected"
            exit 1
          fi

  publish-npm:
    name: Publish to NPM
    runs-on: ubuntu-24.04
    timeout-minutes: 5
    needs: [lint, test, build, benchmark, security]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    environment: npm-publish
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build
        run: bun run build

      - name: Verify package
        run: |
          npm pack --dry-run
          echo "Package contents:"
          tar -tzf $(npm pack)

      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  deploy-demo:
    name: Deploy Demo to GitHub Pages
    runs-on: ubuntu-24.04
    timeout-minutes: 5
    needs: [demo]
    if: github.ref == 'refs/heads/main'
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4